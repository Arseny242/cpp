#include <time.h>
#include <stdlib.h>
#include<iostream>
using namespace std;
 void swap ( int & a, int & b )
{
  int  c(a); a=b; b=c;
}
void pushdown( int *a, int first, int last)
{ int temp;
    int r=first;
    if (last==2*r+1)
        {
            if (a[r]<a[2*r+1])
            swap(a[r],a[2*r+1]);
            r=last;
        }
        else
    while (r<=(last/2)-1)
    {

                if ((a[r]<a[2*r+1]) && (a[2*r+1]>=a[2*r+2]))
                {
                    swap(a[r],a[2*r+1]);
                r=2*r+1;}
                else
                    if ((a[r]<a[2*r+2]) && (a[2*r+2]>a[2*r+1]))
                {
                     swap(a[r],a[2*r+2]);

                r=2*r+2; }
                else
                r=last;//cout<<r<<" "<<a[r]<<endl;
            }
    }
void heapsort (int *a, int n)
{ int temp;
    for (int i=n/2-1; i>=0; i--)
        pushdown(a,i,n-1);
    for (int i=n-1; i>0; i--)
            {
                swap(a[0],a[i]);
                pushdown(a,0, i-1);
            }

}
int main()
{
       srand(time(NULL));
    const int n = 10;
    int a[n];
    for (int i = 0; i < n; i++)
    {
     a[i] = 500 - rand() % 1000 ;
     cout<<a[i]<<" ";
    }
/*int n; int  a[100]; cin>>n;
    for (int i = 0; i < n; i++)
        cin>>a[i];*/
    heapsort(a,n);
    cout<<endl;
    for (int i = 0; i < n; i++)
        cout<<a[i]<<" ";
        return 0;
}


//////////Quicksort to string////////////


#include <time.h>
#include <stdlib.h>
#include<iostream>
#include<string>
#include<fstream>
using namespace std;
int findpivot( string *a, int i,int j)
{
      int k;
    for(k=i; k<=j; k++)
        {
            if(a[k]>a[i])
            {
                return k;
            }
        else    {
                if(a[k]<a[i])
                    {
                return i;
                    }
                }
        }
    return -1;
}
int Partition(string *a, int  i,int  j, string pivot)
{
  int l = i;
  int r = j;

  do
        {
        while (a[l] < pivot) l++;
        while (a[r] >= pivot) r--;
     if (l<r)
    {
        string temp = a[l];
        a[l] = a[r];
        a[r] = temp;
    }
        }
   while (l<=r);
    return l;
}
void Quicksort(string *a, int i,int j)
{
    int  k, pivotindex; string pivot;
    pivotindex=findpivot(a,i,j);
    if(pivotindex!=-1)
    {
        pivot=a[pivotindex];
        k=Partition(a,i,j,pivot);
        Quicksort(a,i,k-1);
        Quicksort(a,k,j);
    }
}
int t=clock();
int main()
{
ifstream in("input3.txt");
ofstream out("output.txt");
 string str;int n=0; string a[100000];
    while(in.peek()!=EOF)
        {
        in>>a[n];
        n++;
        }
in.close();
Quicksort(a, 0, n-1);
 for (int i = 0; i < n; i++)
    cout<<a[i]<<endl;
cout<<"Time = "<<(double) (clock()-t)/1000<<endl;
    return 0;
}


//////////Heapsort to string////////////


#include <time.h>
#include <stdlib.h>
#include<iostream>
#include<string>
#include<fstream>
using namespace std;
void swap ( string & a, string & b )
{
  string  c(a); a=b; b=c;
}
void pushdown( string *a, int first, int last)
{
    int r=first;
    if (last==2*r+1)
        {
            if (a[r]<a[2*r+1])
            swap(a[r],a[2*r+1]);
            r=last;
        }
        else
    while (r<=(last/2)-1)
    {

                if ((a[r]<a[2*r+1]) && (a[2*r+1]>=a[2*r+2]))
                {
                    swap(a[r],a[2*r+1]);
                r=2*r+1;}
                else
                    if ((a[r]<a[2*r+2]) && (a[2*r+2]>a[2*r+1]))
                {
                     swap(a[r],a[2*r+2]);

                r=2*r+2; }
                else
                r=last;//cout<<r<<" "<<a[r]<<endl;
            }
    }
void heapsort (string *a, int n)
{ int temp;
    for (int i=n/2-1; i>=0; i--)
        pushdown(a,i,n-1);
    for (int i=n-1; i>0; i--)
            {
                swap(a[0],a[i]);
                pushdown(a,0, i-1);
            }

}
int t=clock();
int main()
{
ifstream in("input3.txt");
ofstream out("output.txt");
 string str;int n=0; string a[100000];
    while(in.peek()!=EOF)
        {
        in>>a[n];
        n++;
        }
in.close();
heapsort(a,n);
 for (int i = 0; i < n; i++)
    cout<<a[i]<<endl;
cout<<"Time = "<<(double) (clock()-t)/1000<<endl;
    return 0;
}
